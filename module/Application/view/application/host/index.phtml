<?php // View Host index ?>

<?php  echo $this->pageTitle("Host"); ?>
<h2>Node Performance | Order By Usage</h2>
<hr>
<div id="svgcontainer"></div>

 <script>

 var data = [
<?php   foreach ($hostlist as $hostitem ) { ?>
            { id:"<?php print $hostitem->id; ?>", host:"<?php print $hostitem->ip; ?>", usage:"<?php print $hostitem->usage; ?>", fail:"<?php print (100-$hostitem->usage); ?>"},
<?php } ?>
];


var width = 200,
    height = 200,
    tau = 2 * Math.PI; 

var id = <?php print $id; ?>;
var forecolor = "#c5ec00";

//An arc function with all values bound except the endAngle. So, to compute an
//SVG path string for a given angle, we pass an object with an endAngle
//property to the `arc` function, and it will return the corresponding string.
var arc = d3.svg.arc()
.innerRadius(60)
.outerRadius(100)
.startAngle(0);

data.forEach(function(d) {

         if (d.id==id) forecolor="#ffbf07"; else forecolor = "#c5ec00";
    
        //Create the SVG container, and apply a transform such that the origin is the
        //center of the canvas. This way, we don't need to position arcs individually.

        var svglink =  d3.select("#svgcontainer").append("a")
        .attr("href", "/host/"+d.id);

         var svg = svglink.append("svg")
        .attr("width", width)
        .attr("height", height)
        .append("g")
        .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

         /* svg ohne a link */
         /* var svg = d3.select("#svgcontainer").append("svg")
        .attr("width", width)
        .attr("height", height)
        .append("g")
        .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
        */
        
        //Add the background arc, from 0 to 100% (tau).
        var background = svg.append("path")
        .datum({endAngle: tau})
        .style("fill", "#eee")
        .attr("d", arc);
        
        //Add the foreground arc in orange, currently showing 12.7%.
        var foreground = svg.append("path")
        .datum({endAngle: 0.01 * tau})
        .style("fill", forecolor)
        .attr("d", arc);

        var text = svg.append("text")
        .attr("dy", "1em")
        .attr("fill", "#777")
        .attr("font-size", "12")
        .attr("font-family", "Lato")
        .style("text-anchor", "middle")
        .text(d.host);

        var text = svg.append("text")
        .attr("dy", "-0.2em")
        .attr("fill", "#a3c400")
        .attr("font-size", "28")
        .attr("font-family", "Lato")
        .style("text-anchor", "middle")
        .text(d.usage+"%");
       
        setTimeout(function() {
        	foreground.transition()
        	  .duration(750)
        	  .call(arcTween, d.usage/100 * tau);
        }, Math.random()*700+500); // Random
        
});

function arcTween(transition, newAngle) {
    transition.attrTween("d", function(d) {
    var interpolate = d3.interpolate(d.endAngle, newAngle);
    return function(t) {
      d.endAngle = interpolate(t);
      return arc(d);
    };
}

);
}

</script>
    
